# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{ruby-openid}
  s.version = "2.6.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["JanRain, Inc"]
  s.autorequire = %q{openid}
  s.date = %q{2014-10-27}
  s.email = %q{openid@janrain.com}
  s.files = ["test/data/accept.txt", "test/data/dh.txt", "test/data/example-xrds.xml", "test/data/linkparse.txt", "test/data/n2b64", "test/data/test1-discover.txt", "test/data/test1-parsehtml.txt", "test/data/test_discover/malformed_meta_tag.html", "test/data/test_discover/openid.html", "test/data/test_discover/openid2.html", "test/data/test_discover/openid2_xrds.xml", "test/data/test_discover/openid2_xrds_no_local_id.xml", "test/data/test_discover/openid_1_and_2.html", "test/data/test_discover/openid_1_and_2_xrds.xml", "test/data/test_discover/openid_1_and_2_xrds_bad_delegate.xml", "test/data/test_discover/openid_and_yadis.html", "test/data/test_discover/openid_no_delegate.html", "test/data/test_discover/openid_utf8.html", "test/data/test_discover/yadis_0entries.xml", "test/data/test_discover/yadis_2_bad_local_id.xml", "test/data/test_discover/yadis_2entries_delegate.xml", "test/data/test_discover/yadis_2entries_idp.xml", "test/data/test_discover/yadis_another_delegate.xml", "test/data/test_discover/yadis_idp.xml", "test/data/test_discover/yadis_idp_delegate.xml", "test/data/test_discover/yadis_no_delegate.xml", "test/data/test_xrds/=j3h.2007.11.14.xrds", "test/data/test_xrds/README", "test/data/test_xrds/delegated-20060809-r1.xrds", "test/data/test_xrds/delegated-20060809-r2.xrds", "test/data/test_xrds/delegated-20060809.xrds", "test/data/test_xrds/no-xrd.xml", "test/data/test_xrds/not-xrds.xml", "test/data/test_xrds/prefixsometimes.xrds", "test/data/test_xrds/ref.xrds", "test/data/test_xrds/sometimesprefix.xrds", "test/data/test_xrds/spoof1.xrds", "test/data/test_xrds/spoof2.xrds", "test/data/test_xrds/spoof3.xrds", "test/data/test_xrds/status222.xrds", "test/data/test_xrds/subsegments.xrds", "test/data/test_xrds/valid-populated-xrds.xml", "test/data/trustroot.txt", "test/data/urinorm.txt", "test/discoverdata.rb", "test/test_accept.rb", "test/test_association.rb", "test/test_associationmanager.rb", "test/test_ax.rb", "test/test_checkid_request.rb", "test/test_consumer.rb", "test/test_cryptutil.rb", "test/test_dh.rb", "test/test_discover.rb", "test/test_discovery_manager.rb", "test/test_extension.rb", "test/test_extras.rb", "test/test_fetchers.rb", "test/test_filters.rb", "test/test_idres.rb", "test/test_kvform.rb", "test/test_kvpost.rb", "test/test_linkparse.rb", "test/test_message.rb", "test/test_nonce.rb", "test/test_oauth.rb", "test/test_openid_yadis.rb", "test/test_pape.rb", "test/test_parsehtml.rb", "test/test_responses.rb", "test/test_server.rb", "test/test_sreg.rb", "test/test_stores.rb", "test/test_trustroot.rb", "test/test_ui.rb", "test/test_urinorm.rb", "test/test_util.rb", "test/test_xrds.rb", "test/test_xri.rb", "test/test_xrires.rb", "test/test_yadis_discovery.rb", "test/testutil.rb", "test/util.rb"]
  s.homepage = %q{https://github.com/openid/ruby-openid}
  s.licenses = ["Ruby", "Apache Software License 2.0"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.6.2}
  s.summary = %q{A library for consuming and serving OpenID identities.}
  s.test_files = ["test/data/accept.txt", "test/data/dh.txt", "test/data/example-xrds.xml", "test/data/linkparse.txt", "test/data/n2b64", "test/data/test1-discover.txt", "test/data/test1-parsehtml.txt", "test/data/test_discover/malformed_meta_tag.html", "test/data/test_discover/openid.html", "test/data/test_discover/openid2.html", "test/data/test_discover/openid2_xrds.xml", "test/data/test_discover/openid2_xrds_no_local_id.xml", "test/data/test_discover/openid_1_and_2.html", "test/data/test_discover/openid_1_and_2_xrds.xml", "test/data/test_discover/openid_1_and_2_xrds_bad_delegate.xml", "test/data/test_discover/openid_and_yadis.html", "test/data/test_discover/openid_no_delegate.html", "test/data/test_discover/openid_utf8.html", "test/data/test_discover/yadis_0entries.xml", "test/data/test_discover/yadis_2_bad_local_id.xml", "test/data/test_discover/yadis_2entries_delegate.xml", "test/data/test_discover/yadis_2entries_idp.xml", "test/data/test_discover/yadis_another_delegate.xml", "test/data/test_discover/yadis_idp.xml", "test/data/test_discover/yadis_idp_delegate.xml", "test/data/test_discover/yadis_no_delegate.xml", "test/data/test_xrds/=j3h.2007.11.14.xrds", "test/data/test_xrds/README", "test/data/test_xrds/delegated-20060809-r1.xrds", "test/data/test_xrds/delegated-20060809-r2.xrds", "test/data/test_xrds/delegated-20060809.xrds", "test/data/test_xrds/no-xrd.xml", "test/data/test_xrds/not-xrds.xml", "test/data/test_xrds/prefixsometimes.xrds", "test/data/test_xrds/ref.xrds", "test/data/test_xrds/sometimesprefix.xrds", "test/data/test_xrds/spoof1.xrds", "test/data/test_xrds/spoof2.xrds", "test/data/test_xrds/spoof3.xrds", "test/data/test_xrds/status222.xrds", "test/data/test_xrds/subsegments.xrds", "test/data/test_xrds/valid-populated-xrds.xml", "test/data/trustroot.txt", "test/data/urinorm.txt", "test/discoverdata.rb", "test/test_accept.rb", "test/test_association.rb", "test/test_associationmanager.rb", "test/test_ax.rb", "test/test_checkid_request.rb", "test/test_consumer.rb", "test/test_cryptutil.rb", "test/test_dh.rb", "test/test_discover.rb", "test/test_discovery_manager.rb", "test/test_extension.rb", "test/test_extras.rb", "test/test_fetchers.rb", "test/test_filters.rb", "test/test_idres.rb", "test/test_kvform.rb", "test/test_kvpost.rb", "test/test_linkparse.rb", "test/test_message.rb", "test/test_nonce.rb", "test/test_oauth.rb", "test/test_openid_yadis.rb", "test/test_pape.rb", "test/test_parsehtml.rb", "test/test_responses.rb", "test/test_server.rb", "test/test_sreg.rb", "test/test_stores.rb", "test/test_trustroot.rb", "test/test_ui.rb", "test/test_urinorm.rb", "test/test_util.rb", "test/test_xrds.rb", "test/test_xri.rb", "test/test_xrires.rb", "test/test_yadis_discovery.rb", "test/testutil.rb", "test/util.rb"]

  if s.respond_to? :specification_version then
    s.specification_version = 4

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end
